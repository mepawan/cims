<?phpclass Users extends CI_Model  {	function __construct() {		parent::__construct();		$this->_prefix = $this->config->item('ciauth')['tbl_prefix'];		$this->_table = $this->_prefix.$this->config->item('ciauth')['tbl_users']; 		$this->_roles_table = $this->_prefix.$this->config->item('ciauth')['tbl_roles']; 	}	function get_all($offset = 0, $row_count = 0) {		$users_table = $this->_table;		$roles_table = $this->_roles_table;		if ($offset >= 0 AND $row_count > 0) {			$this->db->select($this->_table.".*", FALSE);			$this->db->select($this->_roles_table.".name AS role_name", FALSE);			$this->db->join($this->_roles_table, $this->_roles_table.".id = ".$this->_table.".role_id");			$this->db->order_by($this->_table.".id", "ASC");			$query = $this->db->get($this->_table, $row_count, $offset); 		} else {			$query = $this->db->get($this->_table);		}		return $query->num_rows()? $query->result_array():false;	}	function get_roles() {		$this->db->order_by('id', 'asc');		$query = $this->db->get($this->_roles_table);				return $query->num_rows()? $query->result_array():false;	}	function get_user_by_id($user_id) {		$this->db->where('id', $user_id);		$query = $this->db->get($this->_table);		return $query->num_rows()? $query->result_array():false;	}	function get_user_by_username($username){		$this->db->where('username', $username);		$query = $this->db->get($this->_table);		return $query->num_rows()? $query->result_array():false;	}	function get_user_by_email($email){		$this->db->where('email', $email);		$query = $this->db->get($this->_table);		return $query->num_rows()? $query->result_array():false;	}	function get_user_by_phone($phone){		$this->db->where('phone', $phone);		$query = $this->db->get($this->_table);		return $query->num_rows()? $query->result_array():false;	}	function get_login($login){		global $ci_settings;				$this->db->where('username', $login);		$this->db->or_where('email', $login);		$this->db->or_where('phone', $login);		$query = $this->db->get($this->_table);		return $query->num_rows()? $query->row_array():false;	}		function create_user($data){		return $this->db->insert($this->_table, $data);	}		public function update_user_data ( $data, $idx = 'id'){       $id = $data[$idx];	   if(!$id){ return false; }       $this->db->where($idx, $id);       return $this->db->update($this->_table,$data);            }	function delete_user($user_id, $idx = 'id') {		if(!$user_id) { return false; }		$this->db->where($idx, $user_id);		$this->db->delete($this->_table);		return $this->db->affected_rows() > 0;	}}